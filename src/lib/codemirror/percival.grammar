// Lezer LR(1) grammar for Percival, used for syntax highlighting in CodeMirror.

@top Program { entry* }

entry {
  Rule |
  Import
}

Rule {
  Fact "." |
  Fact ":-" (Clause ",")* Clause "."
}

Clause {
  Fact |
  Expr |
  Binding
}

Fact {
  TableName { identifier } "(" ((Prop ",")* Prop)? ")"
}

Binding {
  LocalName { identifier } "=" Value
}

Prop {
  PropName { identifier } (":" Value)?
}

Value {
  LocalName { identifier } |
  literal |
  Expr
}

literal {
  Number |
  String |
  Boolean {
    @specialize<identifier, "true"> |
    @specialize<identifier, "false">
  }
}

Import {
  ImportKeyword { @specialize<identifier, "import"> } TableName { identifier } FromKeyword String
}

@tokens {
  identifier { $[a-zA-Z_] $[a-zA-Z_0-9]* }

  Number { $[-+]? ($[0-9] "_"?)+ ("." ($[0-9] "_"?)+)? ($[eE] $[-+]? ($[0-9] "_"?)+)? }

  String { '"' (!["\\] | "\\" _)* '"' }

  Expr { "`" ![`]* "`" }

  LineComment { "//" ![\n]* }

  BlockComment { "/*" _*? "*/" }

  space { $[ \t\n\r]+ }

  "(" ")"

  ":" ":-" "." "," "="

  FromKeyword { "from" }
}

@skip { space | LineComment | BlockComment }

@detectDelim
